// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as $$Set from "bs-platform/lib/es6/set.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as Caml_option from "bs-platform/lib/es6/caml_option.js";
import * as Crdt$DeltaCrdts from "./Crdt.bs.js";

function State(Data) {
  var join = function (p, q) {
    return Curry._2(Data.union, p, q);
  };
  return {
          empty: Data.empty,
          join: join
        };
}

function Make(Id, $$Element) {
  var Data = $$Set.Make($$Element);
  var empty = Data.empty;
  var join = function (p, q) {
    return Curry._2(Data.union, p, q);
  };
  var State = {
    empty: empty,
    join: join
  };
  var partial_arg = Crdt$DeltaCrdts.Make;
  var include = partial_arg(Id, State);
  var deltaOfState = include.deltaOfState;
  var mutate = include.mutate;
  var replica = function (id) {
    return {
            id: Caml_option.some(id),
            state: Data.empty
          };
  };
  var elements = function (patch) {
    return patch.state;
  };
  var insert = function (replica, element) {
    var delta = Curry._1(deltaOfState, Curry._2(Data.add, element, empty));
    return Curry._2(mutate, replica, delta);
  };
  return {
          Data: Data,
          State: State,
          deltaOfState: deltaOfState,
          join: include.join,
          mutate: mutate,
          replica: replica,
          elements: elements,
          insert: insert
        };
}

export {
  State ,
  Make ,
  
}
/* No side effect */
